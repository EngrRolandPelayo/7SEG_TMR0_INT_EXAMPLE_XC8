Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.10\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\7SEG_INT_EXAMPLE.X.production.sym \
  --cmf=dist/default/production\7SEG_INT_EXAMPLE.X.production.cmf -z \
  -Q16F877A -oC:\Users\ROLAND~1\AppData\Local\Temp\s3bg.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/7SEG_INT_EXAMPLE.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\ROLAND~1\AppData\Local\Temp\s3bg.o \
  dist/default/production\7SEG_INT_EXAMPLE.X.production.o 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ROLAND~1\AppData\Local\Temp\s3bg.o
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
dist/default/production\7SEG_INT_EXAMPLE.X.production.o
                cinit                                15       15        8        8       0
                intentry                              4        4        E        8       0
                text5                                89       89       3B        8       0
                text4                                1D       1D       6C        8       0
                text3                                F8       F8        3        8       0
                text2                                DD       DD       14        8       0
                text1                                F1       F1        7        8       0
                maintext                             C4       C4       19        8       0
                cstackBANK0                          20       20        4       20       1
                cstackCOMMON                         70       70        6       70       1
                bssCOMMON                            76       76        4       70       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15        8         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text5                                89       89       3B         0
                text4                                1D       1D       6C         0
                text3                                F8       F8        3         0
                text2                                DD       DD       14         0
                text1                                F1       F1        7         0
                maintext                             C4       C4       19         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        6         1
                bssCOMMON                            76       76        4         1

        CLASS   BANK0          
                cstackBANK0                          20       20        4         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0000F7  0000FB         8       0  CODE        2
                cstackBANK0                    000020  000004  000024        20       1  BANK0       1
                cstackCOMMON                   000070  00000A  00007A        70       1  COMMON      1


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            024-06F            4C           1
        BANK1            0A0-0EF            50           1
        BANK2            110-16F            60           1
        BANK3            190-1EF            60           1
        CODE             003-003             1           2
                         0FB-1FFF           800
        COMMON           07A-07D             4           1
        CONFIG           2007-2007             1           2
        CONST            003-003             1           2
                         0FB-1FFF           100
        EEDATA           2100-21FF           100           2
        ENTRY            003-003             1           2
                         0FB-1FFF           100
        IDLOC            2000-2003             4           2
        RAM              024-06F            4C           1
                         0A0-0EF            50
                         110-16F            60
                         190-1EF            60
        SFR0             000-01F            20           1
        SFR1             080-09F            20           1
        SFR2             100-10F            10           1
        SFR3             180-18F            10           1
        STACK            110-16F            60           1
        STRCODE          003-003             1           2
                         0FB-1FFF          1F05
        STRING           003-003             1           2
                         0FB-1FFF           100

                                  Symbol Table

_GIE                         (abs)        05F
_INTE                        (abs)        05C
_INTF                        (abs)        059
_ISR                         text4        01D
_OPTION_REG                  (abs)        081
_PORTD                       (abs)        008
_RC0                         (abs)        038
_RC1                         (abs)        039
_T0IE                        (abs)        05D
_T0IF                        (abs)        05A
_TRISB0                      (abs)        430
_TRISC0                      (abs)        438
_TRISC1                      (abs)        439
_TRISD                       (abs)        088
__Habs1                      abs1         000
__Hbank0                     bank0        000
__Hbank1                     bank1        000
__Hbank2                     bank2        000
__Hbank3                     bank3        000
__HbssCOMMON                 bssCOMMON    000
__Hcinit                     cinit        01D
__Hclrtext                   clrtext      000
__Hcode                      code         000
__Hcommon                    common       000
__Hconfig                    config       000
__HcstackBANK0               cstackBANK0  000
__HcstackCOMMON              cstackCOMMON 000
__Heeprom_data               eeprom_data  000
__Hend_init                  end_init     015
__Hfunctab                   functab      000
__Hidloc                     idloc        000
__Hinit                      init         012
__Hintentry                  intentry     012
__Hmaintext                  maintext     000
__Hpowerup                   powerup      000
__Hram                       ram          000
__Hreset_vec                 reset_vec    003
__Hsfr0                      sfr0         000
__Hsfr1                      sfr1         000
__Hsfr2                      sfr2         000
__Hsfr3                      sfr3         000
__Hspace_0                   (abs)        0FB
__Hspace_1                   (abs)        07A
__Hspace_2                   (abs)        000
__Hspace_3                   (abs)        000
__Hstack                     stack        000
__Hstrings                   strings      000
__Htext                      text         000
__Labs1                      abs1         000
__Lbank0                     bank0        000
__Lbank1                     bank1        000
__Lbank2                     bank2        000
__Lbank3                     bank3        000
__LbssCOMMON                 bssCOMMON    000
__Lcinit                     cinit        015
__Lclrtext                   clrtext      000
__Lcode                      code         000
__Lcommon                    common       000
__Lconfig                    config       000
__LcstackBANK0               cstackBANK0  000
__LcstackCOMMON              cstackCOMMON 000
__Leeprom_data               eeprom_data  000
__Lend_init                  end_init     012
__Lfunctab                   functab      000
__Lidloc                     idloc        000
__Linit                      init         012
__Lintentry                  intentry     004
__Lmaintext                  maintext     000
__Lpowerup                   powerup      000
__Lram                       ram          000
__Lreset_vec                 reset_vec    000
__Lsfr0                      sfr0         000
__Lsfr1                      sfr1         000
__Lsfr2                      sfr2         000
__Lsfr3                      sfr3         000
__Lspace_0                   (abs)        000
__Lspace_1                   (abs)        000
__Lspace_2                   (abs)        000
__Lspace_3                   (abs)        000
__Lstack                     stack        000
__Lstrings                   strings      000
__Ltext                      text         000
__S0                         (abs)        0FB
__S1                         (abs)        07A
__S2                         (abs)        000
__S3                         (abs)        000
___int_sp                    stack        000
___latbits                   (abs)        002
___sp                        stack        000
___stackhi                   (abs)        000
___stacklo                   (abs)        000
__end_of_ISR                 text4        089
__end_of__initialization     cinit        019
__end_of_enableExtInterrupt  text3        0FB
__end_of_enableTmrInterrupt  text2        0F1
__end_of_main                maintext     0DD
__end_of_numberToSegment     text5        0C4
__end_of_setupPorts          text1        0F8
__initialization             cinit        015
__pbssCOMMON                 bssCOMMON    076
__pcstackBANK0               cstackBANK0  020
__pcstackCOMMON              cstackCOMMON 070
__pintentry                  intentry     004
__pmaintext                  maintext     0C4
__ptext1                     text1        0F1
__ptext2                     text2        0DD
__ptext3                     text3        0F8
__ptext4                     text4        01D
__ptext5                     text5        089
__size_of_ISR                (abs)        000
__size_of_enableExtInterrupt (abs)        000
__size_of_enableTmrInterrupt (abs)        000
__size_of_main               (abs)        000
__size_of_numberToSegment    (abs)        000
__size_of_setupPorts         (abs)        000
_enableExtInterrupt          text3        0F8
_enableTmrInterrupt          text2        0DD
_main                        maintext     0C4
_numberToSegment             text5        089
_ones                        bssCOMMON    078
_setupPorts                  text1        0F1
_tens                        bssCOMMON    076
btemp                        (abs)        07E
enableTmrInterrupt@mask      cstackBANK0  022
enableTmrInterrupt@prescale  cstackBANK0  020
end_of_initialization        cinit        019
interrupt_function           intentry     004
intlevel0                    functab      000
intlevel1                    functab      000
intlevel2                    functab      000
intlevel3                    functab      000
intlevel4                    functab      000
intlevel5                    functab      000
numberToSegment@number       cstackCOMMON 070
reset_vec                    reset_vec    000
saved_w                      (abs)        07E
start                        init         012
start_initialization         cinit        015
wtemp0                       (abs)        07E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 24 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_enableExtInterrupt
		_enableTmrInterrupt
		_setupPorts
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _setupPorts *****************
 Defined at:
		line 46 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _enableTmrInterrupt *****************
 Defined at:
		line 39 in file "main.c"
 Parameters:    Size  Location     Type
  prescale        2    0[BANK0 ] int 
 Auto vars:     Size  Location     Type
  mask            2    2[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _enableExtInterrupt *****************
 Defined at:
		line 34 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 54 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_numberToSegment
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _numberToSegment *****************
 Defined at:
		line 85 in file "main.c"
 Parameters:    Size  Location     Type
  number          2    0[COMMON] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
shared
		__initialization		CODE           	0015	0000	5

shared estimated size: 5

main.c
		_enableTmrInterrupt		CODE           	00DD	0000	21
		_ISR           		CODE           	001D	0000	109
		_main          		CODE           	00C4	0000	26
		_setupPorts    		CODE           	00F1	0000	8
		_enableExtInterrupt		CODE           	00F8	0000	4
		_numberToSegment		CODE           	0089	0000	60

main.c estimated size: 228

